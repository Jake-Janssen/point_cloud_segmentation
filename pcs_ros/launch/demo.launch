<?xml version="1.0" ?>
<launch>
  <arg name="cloud_path" default="$(find pcs_ros)/test/data/colorized_cloud1.bag"/>
  <arg name="use_pcd" default="false" />
  <arg name="viz" default="true" />
  <arg name="hist_backproject" default="false" />

  <!-- Load from a PCD file -->
  <group if="$(arg use_pcd)">
    <remap from="cloud_pcd" to="unmasked_cloud" />
    <node pkg="pcl_ros" type="pcd_to_pointcloud" name="simulated_scanner" output="screen" args="$(arg cloud_path) 1">
      <param name="frame_id" value="base_link"/>
    </node>
  </group>
  <!-- Load from a bag file -->
  <group unless="$(arg use_pcd)">
    <remap from="/camera/depth_registered/points" to="pc_masker_node/unmasked_cloud" />
    <node pkg="rosbag" type="play" name="rosbag_player" args="--clock --loop $(arg cloud_path)"/>
  </group>

<!-- TODO: Convert this to use point_cloud_annotator_node -->
<!--  <node pkg="pcs_ros" type="pc_masker_node" name="pc_masker_node" output="screen" >
    <param name="debug_viewer" value="false" />
    <param name="debug_publisher" value="false" />
  </node>-->

  <!-- Launch detector -->
  <node unless="$(arg hist_backproject)" pkg="pcs_ros" type="pcs_ros_hsv_thresholding_node" name="hsv_threshold_node" output="screen" />
  <node if="$(arg hist_backproject)" pkg="pcs_ros" type="histogram_backprojection_node" name="histogram_backprojection_node" output="screen" >
      <param name="filepath" value="$(find pcs_detection)/scripts/example_data/trained_hist.npy"/>
  </node>

  <!-- Visualization -->
  <node if="$(arg viz)" name="rviz" type="rviz" pkg="rviz" args="-d $(find pcs_ros)/config/demo.rviz" output="screen"/>

  <!-- This is used to save images for data collection. Call the save image service with rosservice call save -->
  <node pkg="image_view" type="image_saver" name="image_saver" output="screen" >
    <param name="filename" value="$(find pcs_detection)/data/%04i.png" />
    <param name="encoding" value="bgr8" />
    <param name="save_all_image" value="false" />
  </node>

</launch>
